/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package com.perkss.order.model;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class OrderRequested extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6831197528805492969L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderRequested\",\"namespace\":\"com.perkss.order.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"product_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderRequested> ENCODER =
          new BinaryMessageEncoder<OrderRequested>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderRequested> DECODER =
          new BinaryMessageDecoder<OrderRequested>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderRequested> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderRequested> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderRequested> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderRequested>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderRequested to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderRequested from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderRequested instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderRequested fromByteBuffer(
          java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated
  public java.lang.String id;
  @Deprecated
  public java.lang.String product_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderRequested() {
  }

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param product_id The new value for product_id
   */
  public OrderRequested(java.lang.String id, java.lang.String product_id) {
    this.id = id;
    this.product_id = product_id;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() {
    return MODEL$;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return id;
      case 1:
        return product_id;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        id = value$ != null ? value$.toString() : null;
        break;
      case 1:
        product_id = value$ != null ? value$.toString() : null;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'product_id' field.
   * @return The value of the 'product_id' field.
   */
  public java.lang.String getProductId() {
    return product_id;
  }


  /**
   * Sets the value of the 'product_id' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.String value) {
    this.product_id = value;
  }

  /**
   * Creates a new OrderRequested RecordBuilder.
   * @return A new OrderRequested RecordBuilder
   */
  public static com.perkss.order.model.OrderRequested.Builder newBuilder() {
    return new com.perkss.order.model.OrderRequested.Builder();
  }

  /**
   * Creates a new OrderRequested RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderRequested RecordBuilder
   */
  public static com.perkss.order.model.OrderRequested.Builder newBuilder(com.perkss.order.model.OrderRequested.Builder other) {
    if (other == null) {
      return new com.perkss.order.model.OrderRequested.Builder();
    } else {
      return new com.perkss.order.model.OrderRequested.Builder(other);
    }
  }

  /**
   * Creates a new OrderRequested RecordBuilder by copying an existing OrderRequested instance.
   * @param other The existing instance to copy.
   * @return A new OrderRequested RecordBuilder
   */
  public static com.perkss.order.model.OrderRequested.Builder newBuilder(com.perkss.order.model.OrderRequested other) {
    if (other == null) {
      return new com.perkss.order.model.OrderRequested.Builder();
    } else {
      return new com.perkss.order.model.OrderRequested.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderRequested instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderRequested>
          implements org.apache.avro.data.RecordBuilder<OrderRequested> {

    private java.lang.String id;
    private java.lang.String product_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.perkss.order.model.OrderRequested.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.product_id)) {
        this.product_id = data().deepCopy(fields()[1].schema(), other.product_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderRequested instance
     * @param other The existing instance to copy.
     */
    private Builder(com.perkss.order.model.OrderRequested other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.product_id)) {
        this.product_id = data().deepCopy(fields()[1].schema(), other.product_id);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Gets the value of the 'id' field.
     * @return The value.
     */
    public java.lang.String getId() {
      return id;
    }


    /**
     * Sets the value of the 'id' field.
     * @param value The value of 'id'.
     * @return This builder.
     */
    public com.perkss.order.model.OrderRequested.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'id' field has been set.
     * @return True if the 'id' field has been set, false otherwise.
     */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
     * Clears the value of the 'id' field.
     * @return This builder.
     */
    public com.perkss.order.model.OrderRequested.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'product_id' field.
     * @return The value.
     */
    public java.lang.String getProductId() {
      return product_id;
    }


    /**
     * Sets the value of the 'product_id' field.
     * @param value The value of 'product_id'.
     * @return This builder.
     */
    public com.perkss.order.model.OrderRequested.Builder setProductId(java.lang.String value) {
      validate(fields()[1], value);
      this.product_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'product_id' field has been set.
     * @return True if the 'product_id' field has been set, false otherwise.
     */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }


    /**
     * Clears the value of the 'product_id' field.
     * @return This builder.
     */
    public com.perkss.order.model.OrderRequested.Builder clearProductId() {
      product_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderRequested build() {
      try {
        OrderRequested record = new OrderRequested();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.product_id = fieldSetFlags()[1] ? this.product_id : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderRequested>
          WRITER$ = (org.apache.avro.io.DatumWriter<OrderRequested>) MODEL$.createDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out)
          throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderRequested>
          READER$ = (org.apache.avro.io.DatumReader<OrderRequested>) MODEL$.createDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in)
          throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override
  protected boolean hasCustomCoders() {
    return true;
  }

  @Override
  public void customEncode(org.apache.avro.io.Encoder out)
          throws java.io.IOException {
    out.writeString(this.id);

    out.writeString(this.product_id);

  }

  @Override
  public void customDecode(org.apache.avro.io.ResolvingDecoder in)
          throws java.io.IOException {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readString();

      this.product_id = in.readString();

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
          case 0:
            this.id = in.readString();
            break;

          case 1:
            this.product_id = in.readString();
            break;

          default:
            throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










